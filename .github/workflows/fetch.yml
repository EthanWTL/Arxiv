# .github/workflows/fetch.yml
name: Fetch Daily Arxiv Papers

on:
  schedule:
    - cron: "0 9 * * *"     # daily
  workflow_dispatch:
    inputs:
      date:
        description: "UTC date (YYYY-MM-DD). Leave empty for today."
        required: false
        default: ""
      categories:
        description: "Space-separated categories (e.g., 'cs.AI cs.CV'). Leave empty for defaults."
        required: false
        default: ""
      dry_run:
        description: "If true, do not push commits; just upload artifacts."
        required: false
        default: "true"

permissions:
  contents: write  # required to push when dry_run == false

jobs:
  fetch-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install deps
        run: pip install "requests==2.*"

      - name: Ensure output dir
        run: mkdir -p paper_json

      - name: Run fetch (manual or scheduled)
        run: |
          DATE_ARG=""
          [ -n "${{ github.event.inputs.date }}" ] && DATE_ARG="--date ${{ github.event.inputs.date }}"

          CATS_ARG=""
          if [ -n "${{ github.event.inputs.categories }}" ]; then
            # turn string to list
            CATS_ARG="--categories ${{ github.event.inputs.categories }}"
          fi

          DRY_FLAG=""
          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            DRY_FLAG="--dry-run"
          fi

          echo "Running: python fetch_papers.py $DATE_ARG $CATS_ARG $DRY_FLAG"
          python fetch_papers.py $DATE_ARG $CATS_ARG $DRY_FLAG

      - name: Show results (debug)
        run: |
          ls -la paper_json || true
          FILE_TO_SHOW=$(ls -1 paper_json/*.json | tail -n 1 || true)
          if [ -n "$FILE_TO_SHOW" ]; then
            echo "Latest file: $FILE_TO_SHOW"
            # show count quickly
            python - <<'PY'
import json,glob
files=sorted(glob.glob("paper_json/*.json"))
if files:
    data=json.load(open(files[-1]))
    print("Paper count:", len(data))
    for k in ("id","title","published"):
        print("First:", {k: data[0].get(k) if data else None})
PY
          else
            echo "No JSON files found."
          fi

      - name: Upload JSON as artifact (always helpful)
        uses: actions/upload-artifact@v4
        with:
          name: paper-json
          path: paper_json/*.json
          if-no-files-found: warn

      - name: Commit & push (only when NOT dry-run)
        if: ${{ github.event.inputs.dry_run != 'true' || github.event_name == 'schedule' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -f paper_json/*.json || true
          git diff --cached --quiet && echo "No changes to commit" && exit 0
          git commit -m "Daily update: $(date -u +'%Y-%m-%d')"
          git push
